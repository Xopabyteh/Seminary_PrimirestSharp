<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <base href="/" />
        <link rel="icon" type="image/png" href="favicon.png" />
        
    @*     <!-- Bootstrap CSS (you can set the Bootstrap flavor with a parameter) -->
        @((MarkupString)HxSetup.RenderBootstrapCssReference()) *@
        
        <!-- Custom themed Bootstrap CSS build -->
        <link href="_content/Havit.Blazor.Components.Web.Bootstrap/bootstrap.css" rel="stylesheet" />
        <link href='css/bootstrap-min.css'/> @* For intellisense *@

        <!-- Default values for additional CSS Variables (+ import Bootstrap Icons) -->
        <link href="_content/Havit.Blazor.Components.Web.Bootstrap/defaults.css" rel="stylesheet" />

        <link href='css/app.css' rel='stylesheet'/>
    </head>

    <body>
        <Routes @rendermode="InteractiveServer" />
        <script src="_framework/blazor.web.js"></script>
        
        @* <!-- JavaScript Bundle with Popper -->
        @((MarkupString)HxSetup.RenderBootstrapJavaScriptReference()) *@
        
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>

        <!-- Reading and setting browser cookies (we obviously cannot use HttpContext) -->
        <script>
            var BrowserCookieService = BrowserCookieService || {};
            BrowserCookieService.WriteCookie = function(
                name, 
                value, 
                days)
                {
                    var expires;
                    if (days) {
                        var date = new Date();
                        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                        expires = "; expires=" + date.toGMTString();
                    }
                    else {
                        expires = "";
                    }
                    document.cookie = name + "=" + value + expires + "; path=/";
                }

            BrowserCookieService.ReadCookie = function (
                cname)
                {
                    var name = cname + "=";
                    var decodedCookie = decodeURIComponent(document.cookie);
                    var ca = decodedCookie.split(';');
                    for (var i = 0; i < ca.length; i++) {
                        var c = ca[i];
                        while (c.charAt(0) == ' ') {
                            c = c.substring(1);
                        }
                        if (c.indexOf(name) == 0) {
                            return c.substring(name.length, c.length);
                        }
                    }
                    return "";
                }
        </script>

    </body>
</html>